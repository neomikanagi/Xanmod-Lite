name: build_main

on:
  schedule:
    - cron: '1 1 1 * *'
  workflow_dispatch:
    inputs:
      LLVM_VER:
        description: 'LLVM_VER (Specify LLVM Version)'
        required: true
        default: '19'
      KERNEL_VER:
        description: 'KERNEL_VER (Specify XANMOD branch to build)'
        required: true
        default: '6.12'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        config: [v1, v2, v3]
    name: "ðŸš§ Build Xanmod for x86-64-${{matrix.config}}"

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set Environment Variables
        run: |
          echo "LLVM_VER=${{ github.event.inputs.LLVM_VER }}" >> $GITHUB_ENV
          echo "KERNEL_VER=${{ github.event.inputs.KERNEL_VER }}" >> $GITHUB_ENV

      - name: Cleanup
        uses: rokibhasansagar/slimhub_actions@main

      - name: Install dependencies
        run: |
          sudo apt update && sudo apt purge firefox -y && sudo apt upgrade -y
          sudo apt install -y \
            wget \
            build-essential \
            bison \
            flex \
            pkg-config \
            qtbase5-dev \
            qt5-qmake \
            qttools5-dev-tools \
            libssl-dev \
            libncurses-dev \
            git \
            libelf-dev \
            lz4 \
            debhelper \
            dh-virtualenv \
            zstd \
            elfutils \
            bc

      - name: Setup Clang/LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${{ env.LLVM_VER }}
          sudo ln -s /usr/bin/clang-${{ env.LLVM_VER }} /usr/bin/clang
          sudo ln -s /usr/bin/ld.lld-${{ env.LLVM_VER }} /usr/bin/ld.lld

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Clone Kernel Source
        run: |
          git clone --depth=1 https://gitlab.com/xanmod/linux -b ${{ env.KERNEL_VER }} kernel/xanmod

      - name: Modify Configuration
        run: |
          cd kernel/xanmod
          for config in v1 v2 v3; do
            while read -r line; do
              sed -i "/$line/s/^.*$/# $line is not set/" CONFIGS/xanmod/gcc/config_x86-64-$config
            done < ../../disable.config
          done

      - name: Set Build Date
        run: echo "BUILD_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV

      - name: Run Build
        run: |
          cd kernel/xanmod
          cp CONFIGS/xanmod/gcc/config_x86-64-${{ matrix.config }} arch/x86/configs/${{ matrix.config }}_defconfig
          
          make clean
          rm -rf vmlinux-gdb.py
          export LLVM_SUFFIX=-${{ env.LLVM_VER }}
          
          ARGS="CC=clang LD=ld.lld LLVM=1 LLVM_IAS=1 LOCALVERSION=-xanmod-${{ env.KERNEL_VER }}-clang-${{ env.LLVM_VER }}"
          make ${ARGS} ${{ matrix.config }}_defconfig
          make ${ARGS} deb-pkg -j$(nproc)
          
          cd ..
          cp xanmod/.config config
          rm -rf xanmod *.gz *.dsc *.buildinfo *.changes

      - name: Upload Kernel to Releases
        uses: ncipollo/release-action@main
        with:
          tag: xanmod-main-${{ matrix.config }}-${{ env.BUILD_DATE }}
          artifacts: kernel/*
          allowUpdates: true
          removeArtifacts: false
          token: ${{ secrets.RELEASE_TOKEN }}
          body: |
            ### Xanmod Kernel Build Information
            - Kernel build version: ${{ env.KERNEL_VER }}
            - LLVM Version: ${{ env.LLVM_VER }}
          draft: false
          prerelease: false
          generateReleaseNotes: false
